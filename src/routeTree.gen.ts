// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const DonateLazyImport = createFileRoute('/donate')()
const IndexLazyImport = createFileRoute('/')()
const EventsIndexLazyImport = createFileRoute('/events/')()
const EventsEventsIdLazyImport = createFileRoute('/events/$eventsId')()

// Create/Update Routes

const DonateLazyRoute = DonateLazyImport.update({
  path: '/donate',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/donate.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const EventsIndexLazyRoute = EventsIndexLazyImport.update({
  path: '/events/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/events/index.lazy').then((d) => d.Route))

const EventsEventsIdLazyRoute = EventsEventsIdLazyImport.update({
  path: '/events/$eventsId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/events/$eventsId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/donate': {
      preLoaderRoute: typeof DonateLazyImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventsId': {
      preLoaderRoute: typeof EventsEventsIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/events/': {
      preLoaderRoute: typeof EventsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  DonateLazyRoute,
  EventsEventsIdLazyRoute,
  EventsIndexLazyRoute,
])
